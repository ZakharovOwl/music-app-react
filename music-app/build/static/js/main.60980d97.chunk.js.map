{"version":3,"sources":["components/Tweet.jsx","components/TweetList.jsx","components/MenuUser.jsx","components/Trends.jsx","components/CreateTweet.jsx","components/FilterTweets.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tweet","name","tweet","tweets","setTweets","tweetsFilter","setTweetsFilter","className","onClick","filter","state","id","src","alt","i","length","newTweet","prompt","message","TweetList","map","MenuUser","Trends","CreateTweet","textInput","setTextInput","onSubmit","e","preventDefault","uuidv4","onKeyDown","keyCode","autoFocus","value","onChange","target","cols","rows","FilterTweets","textInputFilter","setTextInputFilter","toLowerCase","filterTweets","includes","push","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60980d97.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Tweet = ({\r\n  name,\r\n  tweet,\r\n  tweets,\r\n  setTweets,\r\n  tweetsFilter,\r\n  setTweetsFilter,\r\n}) => {\r\n  // const [tweet, setTweet] = useState(`${tweet}`);\r\n  //functions\r\n\r\n  const deleteTweet = () => {\r\n    setTweetsFilter(tweetsFilter.filter((state) => state.id !== tweet.id));\r\n    setTweets(tweetsFilter.filter((state) => state.id !== tweet.id));\r\n  };\r\n\r\n  const editTweet = () => {\r\n    for (let i = 0; i < tweetsFilter.length; i++) {\r\n      if (tweetsFilter[i].id === tweet.id) {\r\n        let newTweet = prompt(`${tweet.message}`);\r\n        tweets[i].message = newTweet;\r\n        tweetsFilter[i].message = newTweet;\r\n        setTweetsFilter([...tweets]);\r\n        setTweets([...tweetsFilter]);\r\n      } \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweet-wrapper\">\r\n      <div className=\"tweet-btns\">\r\n        <img\r\n          onClick={deleteTweet}\r\n          className=\"img-btns\"\r\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1828/1828843.svg\"\r\n          alt=\"remove-img\"\r\n        />\r\n        <img\r\n          onClick={editTweet}\r\n          className=\"img-btns\"\r\n          src=\"https://www.flaticon.com/svg/static/icons/svg/860/860763.svg\"\r\n          alt=\"edit-img\"\r\n        />\r\n        <img\r\n          className=\"img-btns\"\r\n          src=\"https://www.flaticon.com/svg/static/icons/svg/872/872229.svg\"\r\n          alt=\"like\"\r\n        />\r\n      </div>\r\n      <div className=\"tweet-user\">\r\n        <img\r\n          className=\"tweet-user-ava\"\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR8qBMp5TG3lTOM4Dn4MCcrdxavrtwcvE_DqQ&usqp=CAU\"\r\n          alt=\"ava\"\r\n        />\r\n        <div>\r\n          <h2>{name}</h2>\r\n          <h3>{tweet.message}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet\";\r\n\r\nconst TweetList = ({\r\n  name,\r\n  tweets,\r\n  setTweets,\r\n  tweetsFilter,\r\n  setTweetsFilter,\r\n}) => {\r\n  return (\r\n    <div className=\"tweets-list-wrapper\">\r\n      {tweetsFilter.map((tweet) => (\r\n        <Tweet\r\n          name={name}\r\n          tweet={tweet}\r\n          setTweets={setTweets}\r\n          tweets={tweets}\r\n          key={tweet.id}\r\n          tweetsFilter={tweetsFilter}\r\n          setTweetsFilter={setTweetsFilter}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetList;\r\n","import React from \"react\";\r\n\r\nconst MenuUser = () => {\r\n  return (\r\n    <div className='nav-wrapper'>\r\n      <ul className='nav-links'>\r\n        <h4>Block doesn't work, sorry</h4>\r\n        <li>Home</li>\r\n        <li>Profile</li>\r\n        <li>Messages</li>\r\n        <li>Notifications</li>\r\n        <li>More</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuUser;\r\n","import React from \"react\";\r\n\r\nconst Trends= () => {\r\n  return (\r\n    <div className='trends-wrapper'>\r\n      <h3>Trends for you</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trends;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst CreateTweet = ({\r\n  textInput,\r\n  setTextInput,\r\n  tweets,\r\n  setTweets,\r\n  tweetsFilter,\r\n  setTweetsFilter,\r\n}) => {\r\n  //State\r\n  //Functions\r\n  const userInputHandler = (e) => {\r\n    setTextInput(e.target.value);\r\n  };\r\n  const sumbmitTweetHandler = (e) => {\r\n    e.preventDefault();\r\n    setTweets([...tweets, { message: textInput, id: uuidv4() }]);\r\n    setTweetsFilter([...tweets, { message: textInput, id: uuidv4() }]);\r\n    setTextInput(\"\");\r\n  };\r\n  const sumbmitEnter = (event) => {\r\n    if (event.keyCode === 13) {\r\n      setTweets([...tweets, { message: textInput, id: uuidv4() }]);\r\n      setTweetsFilter([...tweets, { message: textInput, id: uuidv4() }]);\r\n      setTextInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweets-create-wrapper\">\r\n      <h3>What's happening?</h3>\r\n      <form\r\n        className=\"form-tweet\"\r\n        onSubmit={sumbmitTweetHandler}\r\n        onKeyDown={(e) => sumbmitEnter(e)}\r\n      >\r\n        <textarea\r\n          className=\"textarea-tweet\"\r\n          autoFocus={true}\r\n          value={textInput}\r\n          onChange={userInputHandler}\r\n          cols=\"50\"\r\n          rows=\"5\"\r\n        ></textarea>\r\n        <button className=\"form-tweet-btn\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTweet;\r\n","import React from \"react\";\r\n\r\nconst FilterTweets = ({\r\n  textInputFilter,\r\n  setTextInputFilter,\r\n  tweets,\r\n  setTweets,\r\n  tweetsFilter,\r\n  setTweetsFilter,\r\n}) => {\r\n  //Function\r\n  const userInputFilter = (e) => {\r\n    setTextInputFilter(e.target.value.toLowerCase());\r\n    e.preventDefault();\r\n    let filterTweets = [];\r\n\r\n    for (let i = 0; i < tweets.length; i++) {\r\n      if (\r\n        textInputFilter.length > 1 &&\r\n        tweets[i].message.toLowerCase().includes(textInputFilter)\r\n      ) {\r\n        filterTweets.push(tweets[i]);\r\n      }  else if (textInputFilter.length < 2) {\r\n        filterTweets = tweets\r\n      }\r\n    }\r\n    setTweetsFilter([...filterTweets]);\r\n  };\r\n\r\n\r\n  return (\r\n    <form className=\"filter-tweets-wrapper\">\r\n      <h4>Search</h4>\r\n      <textarea className=\"textarea-filter\"\r\n        value={textInputFilter}\r\n        onChange={userInputFilter}\r\n        cols=\"50\"\r\n        rows=\"5\"\r\n      ></textarea>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FilterTweets;\r\n","import React, { useState } from \"react\";\r\nimport TweetList from \"./components/TweetList\";\r\nimport MenuUser from \"./components/MenuUser\";\r\nimport Trends from \"./components/Trends\";\r\nimport CreateTweet from \"./components/CreateTweet\";\r\nimport FilterTweets from \"./components/FilterTweets\";\r\nimport './style/App.scss'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"Tony Stark\");\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [tweets, setTweets] = useState([]);\r\n  const [textInputFilter, setTextInputFilter] = useState(\"\");\r\n  const [tweetsFilter, setTweetsFilter] = useState([]);\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <MenuUser />\r\n      <CreateTweet className='tweets-create'\r\n        textInput={textInput}\r\n        setTextInput={setTextInput}\r\n        tweets={tweets}\r\n        setTweets={setTweets}\r\n        tweetsFilter={tweetsFilter}\r\n        setTweetsFilter={setTweetsFilter}\r\n      />\r\n      <TweetList \r\n        name={name}\r\n        tweets={tweets}\r\n        setTweets={setTweets}\r\n        tweetsFilter={tweetsFilter}\r\n        setTweetsFilter={setTweetsFilter}\r\n      />\r\n      <FilterTweets \r\n        textInputFilter={textInputFilter}\r\n        setTextInputFilter={setTextInputFilter}\r\n        tweets={tweets}\r\n        setTweets={setTweets}\r\n        tweetsFilter={tweetsFilter}\r\n        setTweetsFilter={setTweetsFilter}\r\n      />\r\n      <Trends  / >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}