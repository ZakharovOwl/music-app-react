{"version":3,"sources":["util.js","components/Player.jsx","components/Song.jsx","components/LibrarySong.jsx","components/Library.jsx","components/Nav.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","Player","currentSong","setIsPlaying","setSongInfo","songInfo","songs","setSongs","setCurrentSong","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","diraction","a","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","selectedSong","filter","state","Library","libraryStatus","setLibraryStatus","Nav","faMusic","chilllHop","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","onTimeUpdate","onLoadedMetadata","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e5c8533.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\r\n  //check if the song is plaing\r\n  if (isPlaying) {\r\n    const playPromise = audioRef.current.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise.then((audio) => {\r\n        audioRef.current.play();\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { playAudio } from \"../util\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n  setCurrentSong,\r\n}) => {\r\n  //useUffect\r\n  // fnc use every time when [currentSong] change\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  //EVENTS\r\n  //pause/play\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  //input value\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  //skip track\r\n\r\n  const skipTrackHandler = (diraction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    let a;\r\n    if (diraction === \"skip-back\") {\r\n      if (currentIndex === 0) {\r\n        a = songs.length - 1;\r\n        setCurrentSong(songs[a]);\r\n      } else {\r\n        a = currentIndex - 1;\r\n        setCurrentSong(songs[a]);\r\n      }\r\n    } else if (diraction === \"skip-next\") {\r\n      if (currentIndex === songs.length - 1) {\r\n        a = 0;\r\n        setCurrentSong(songs[a]);\r\n      } else {\r\n        a = currentIndex + 1;\r\n        setCurrentSong(songs[a]);\r\n      }\r\n    }\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  //add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-next\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { playAudio } from \"../util\";\r\n\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  id,\r\n}) => {\r\n  const songSelectHandker = () => {\r\n    const selectedSong = songs.filter((state) => state.id === song.id);\r\n    setCurrentSong(selectedSong[0]);\r\n    // add Active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return { ...song, active: false, };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n     //check if the song is plaing\r\n    playAudio(isPlaying, audioRef)\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandker}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.name} />\r\n      <div className=\"song-decription\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({ setCurrentSong, songs, audioRef, isPlaying, setSongs,libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'library-active' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            isPlaying={isPlaying}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            song={song}\r\n            songs={songs}\r\n            setSongs={setSongs}\r\n            id={song.id}\r\n            key={song.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) =>{\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={()=>setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction chilllHop() {\r\n    return[\r\n        {\r\n            name: 'The End',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg',\r\n            artist: 'Philanthrope, Fujitsu',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=8518',\r\n            color: ['#5664b5','#e8bb84'],\r\n            id:uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: 'Under the City Stars',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg',\r\n            artist: 'Aso, Middle School, Aviino',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=10074',\r\n            color: ['#02283a','#fcbf70'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Fox',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg',\r\n            artist: 'Swørn',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=9224',\r\n            color: ['#b83674','#733469'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Train Ride',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg',\r\n            artist: 'Nymano, Philanthrope',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=10140',\r\n            color: ['#564f81','#906a91'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Snug',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/05/be399329e137d6d507393565bacd8e9193c44b07-1024x1024.jpg',\r\n            artist: 'Aso',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=8567',\r\n            color: ['#250e27','#e58285'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Cambria',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/07/50758f405d2aba9cd6e8c4e6cfce44e4d9893714-1024x1024.jpg',\r\n            artist: 'Ian Ewing',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=8785',\r\n            color: ['#c85c5d','#302f64'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'What Was Before',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/12/7e98d3028a22ee7f16f6a9bfcdc2089f089777a5-1024x1024.jpg',\r\n            artist: 'Philanthrope, Leavv',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=9923',\r\n            color: ['#335293','#ac6e7d'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        }\r\n    ]\r\n}\r\n\r\nexport default chilllHop","import React, { useState, useRef } from \"react\";\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nimport \"./styles/App.scss\";\r\nimport data from \"./data\";\r\n\r\nfunction App() {\r\n  //Ref\r\n  const audioRef = useRef(null);\r\n\r\n  //State\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  //update time\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    //Calculate animationPercentage\r\n\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animationPercentage = Math.round(\r\n      (roundedCurrent / roundedDuration) * 100\r\n    );\r\n\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration: duration,\r\n      animationPercentage,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        songInfo={songInfo}\r\n        setSongInfo={setSongInfo}\r\n        audioRef={audioRef}\r\n        setIsPlaying={setIsPlaying}\r\n        isPlaying={isPlaying}\r\n        currentSong={currentSong}\r\n        setSongs={setSongs}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n      />\r\n      <Library\r\n        setSongs={setSongs}\r\n        isPlaying={isPlaying}\r\n        audioRef={audioRef}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        libraryStatus={libraryStatus}\r\n        setLibraryStatus={setLibraryStatus}\r\n      />\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/App.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}